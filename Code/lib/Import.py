import numpy as np
from lib import musurf_reader as ur

"""
Import functions using usurf_reader lib

"""


def importMeasurement(path):
    """
    loads measurement from .nms file generated by µsoft

    :param path: path to file (string)
    :return: x coordinate vector (1D array), y coordinate vector (1D array) and z values (2D array)
    """

    x, y, h_data, _ = ur.readnms(path)

    # rotate so that longer side is always x
    if x.shape < y.shape:
        x, y = y, x
        h_data = np.rot90(h_data)
        print("Rotated imported data so that longest dimension lies in x direction")

    return x, y, h_data


def importImages(path):
    """
    loads individual images from .sms file

    :param path: path to file (string)
    :return: x coordinate vector (1D array), y coordinate vector (1D array), height images (list of 2D array)
    """

    x, y, Images, intensities = ur.readsms(path)
    return x, y, Images


def getStitchingPreferences(path):
    """
    creates stitching preferences dictionary using µsoft .smi file

    :param path: smi file location (string)
    :return: stitching preferences dictionary (see code for details)
    """
    # stitching preferences dictionary:
    #   nx, ny: number of images in x and y direction (int)
    #   ovlp: overlap between images (int)
    #   shiftX, shiftY: values from the microscope stitching preferences
    #   type: # "1D" or "2D" (if more than 1 image in both dimensions)
    #   upwards: longer side is y (bool)

    SP = dict()
    SP['nx'], SP['ny'], SP['ovlp'] = ur.readsmi(path)

    # values specified by the µsoft .xml. Might differ for your scope.
    SP['shiftX'] = 432
    SP['shiftY'] = 0

    SP['type'] = '1D' if SP['nx'] == 1 or SP['ny']  == 1 else '2D'
    SP['upwards'] = SP['ny'] > SP['nx']

    return SP
